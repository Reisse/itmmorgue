#!/bin/sh
# vim: sw=4 ts=4 et :

exec >&2

OS=`uname -s`
EXECUTABLE='itmmorgue'
SRC='itmmorgue.c client.c config.c splash.c i18n.c menu.c'
HDR='itmmorgue.h client.h config.h'
LIB='trie/trie.c'
SRCDIR='src'
LIBDIR='lib'
WORKDIR='bin'

[ -n "$CC" ] && _CC="$CC"
[ -n "$CFLAGS" ] && _CFLAGS="$CFLAGS"
CFLAGS="--std=gnu99 -pedantic -Wall -Wextra -Werror -ggdb3"
LDFLAGS=''
MAKE='make'

case $OS in
    SunOS) 
        LDFLAGS="$LDFLAGS -L /opt/csw/lib/"
        CFLAGS="$CFLAGS -L /opt/csw/lib/ -I /opt/sfw/include/ -lncursesw"
        MAKE=gmake
        VARS_CLIENT='TERM=screen'
        ;;
    FreeBSD)
        MAKE=gmake
        LDFLAGS="$LDFLAGS -L /usr/local/lib/ -lncursesw -ltinfow"
        ;;
    Linux)
        CFLAGS="$CFLAGS -lncursesw"
        CFLAGS_END="-lncursesw"
        ;;
    *)
        echo Unsupported platform!
        exit 2
        ;;
esac

# Prepare dir for configure checks
mkdir -p bin
ls bin >/dev/null || exit 1
STYLE='-o bin/style.o -c doc/style.c'
CURSES='-o bin/ncursesw bin/ncursesw.c'
CFLAGS="$CFLAGS $_CFLAGS"

# Check compiler itself
printf "Checking C compiler..."
if [ -n "$_CC" ] ;then
    CC="$_CC"
    echo "$_CC"
elif cc -v 2>/dev/null ;then
    if cc -v 2>&1 |grep '^gcc version' >/dev/null 2>&1 ;then
        CC=gcc
    else
        CC=cc
    fi

    echo "$CC"
elif gcc -v 2>/dev/null ;then
    CC="gcc"
    echo "$CC"
else
    echo FAIL
fi

# Check CFLAGS
printf "Checking CFLAGS..."
if $CC $CFLAGS $STYLE >/dev/null ;then
    echo OK
else
    echo FAIL
    exit 1
fi

# Check for ncursesw
printf "Checking for ncursesw..."
cat > bin/ncursesw.c <<EOF
#if defined(__FreeBSD__) || defined(__linux__)
#include <ncurses.h>
#else
#include <ncurses/ncurses.h>
#endif /* __FreeBSD__ || __linux__ */
int main(){initscr(); endwin(); return 0;}
EOF
if $CC $CFLAGS $CURSES $LDFLAGS $CFLAGS_END >/dev/null 2>&1 ;then
    echo OK
else
    echo FAIL
    exit 1
fi

# Check for latests versions of gcc
printf "Checking -Wimplicit-fallthrough..."
if $CC $CFLAGS $STYLE -Wimplicit-fallthrough=0 >/dev/null 2>&1 ;then
    echo OK
    CFLAGS="$CFLAGS -Wimplicit-fallthrough=0"
else
    echo FAIL
fi

# Remove stale files
rm -f bin/style.o bin/ncursesw.c bin/ncursesw

# Prepare Makefile
cat > Makefile <<EOF
# Makefile for $OS
EXECUTABLE=$EXECUTABLE
SRCDIR=$SRCDIR
LIBDIR=$LIBDIR
WORKDIR=$WORKDIR
SRC=$SRC
LIB=$LIB
HDR=$HDR
OBJ=\$(SRC:.c=.o)
OLIB=\$(addprefix \$(LIBDIR)/, \$(LIB:.c=.o))
SOURCES=\$(addprefix \$(SRCDIR)/, \$(SRC))
HEADERS=\$(addprefix \$(SRCDIR)/, \$(HDR))
OBJECTS=\$(addprefix \$(WORKDIR)/, \$(OBJ))

CC=$CC
CFLAGS=$CFLAGS
CFLAGS_END=$CFLAGS_END
LDFLAGS=$LDFLAGS

all: \$(WORKDIR)/\$(EXECUTABLE)

\$(WORKDIR):
	mkdir \$(WORKDIR)

\$(WORKDIR)/\$(EXECUTABLE): \$(OBJECTS) \$(OLIB)
	\$(CC) \$(LDFLAGS) \$(CFLAGS) \$(OBJECTS) \$(OLIB) -o \$@ \$(CFLAGS_END)

\$(OLIB): \$(LIBDIR)/\$(LIB)
	\$(MAKE) -C \$(dir \$<)

\$(WORKDIR)/%.o : \$(SRCDIR)/%.c
	\$(CC) \$(CFLAGS) -c \$< -o \$@

\$(SOURCES): \$(WORKDIR)

run: run_client

run_client: \$(WORKDIR)/\$(EXECUTABLE)
	$VARS_CLIENT \$(WORKDIR)/\$(EXECUTABLE)

clean:
	\$(RM) -rf \$(WORKDIR)

.SUFFIXES: .c .o
EOF

echo "Successfully configured for $OS. Please run $MAKE now."
