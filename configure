#!/bin/sh -e
# vim: sw=4 ts=4 et :

exec >&2

########################## USER VARIABLES ##########################
EXECUTABLE='itmmorgue'
SRCDIR='src'
LIBDIR='lib'
WORKDIR='bin'
SRC='itmmorgue.c client.c config.c splash.c locale.c menu.c def_conf.c'
HDR='itmmorgue.h client.h config.h def_conf.h'
LIB='trie/trie.o'
DEBUG=1
####################################################################

OS=`uname -s`
EXECUTABLE="$WORKDIR/$EXECUTABLE"
for C in $SRC ;do
    C=`echo "$C " | sed 's/\\.c /.o/g'`
    OBJECTS="$WORKDIR/$C $OBJECTS"
done
for H in $HDR ;do
    HEADERS="$SRCDIR/$H $HEADERS"
done
for L in $LIB ;do
    L=$LIBDIR/$L
    LIBS="$L $LIBS"
done

[ -n "$CC" ] && _CC="$CC"
[ -n "$CFLAGS" ] && _CFLAGS="$CFLAGS"
CFLAGS="--std=gnu99 -pedantic -Wall -Wextra -Werror -ggdb3 -I$LIBDIR"
[ x1 = "x$DEBUG" ] && CFLAGS="$CFLAGS -D_DEBUG"
LDFLAGS=''

case $OS in
    SunOS) 
        LDFLAGS="$LDFLAGS -L /opt/csw/lib/"
        CFLAGS="$CFLAGS -L /opt/csw/lib/ -I /opt/sfw/include/ -lncursesw"
        VARS_CLIENT='TERM=screen'
        ;;
    FreeBSD)
        LDFLAGS="$LDFLAGS -L /usr/local/lib/ -lncursesw -ltinfow"
        ;;
    Linux)
        CFLAGS="$CFLAGS -lncursesw"
        CFLAGS_END="-lncursesw"
        ;;
    *)
        echo Unsupported platform!
        exit 2
        ;;
esac

# Prepare dir for configure checks
mkdir -p bin
ls bin >/dev/null || exit 1
STYLE='-o bin/style.o -c doc/style.c'
CURSES='-o bin/ncursesw bin/ncursesw.c'
CFLAGS="$CFLAGS $_CFLAGS"

# Check compiler itself
printf "Checking C compiler..."
if [ -n "$_CC" ] ;then
    CC="$_CC"
    echo "$_CC"
elif cc -v 2>/dev/null ;then
    if cc -v 2>&1 |grep '^gcc version' >/dev/null 2>&1 ;then
        CC=gcc
    else
        CC=cc
    fi

    echo "$CC"
elif gcc -v 2>/dev/null ;then
    CC="gcc"
    echo "$CC"
else
    echo FAIL
fi

# Check CFLAGS
printf "Checking CFLAGS..."
if $CC $CFLAGS $STYLE >/dev/null ;then
    echo OK
else
    echo FAIL
    exit 1
fi

# Check for ncursesw
printf "Checking for ncursesw..."
cat > bin/ncursesw.c <<EOF
#if defined(__FreeBSD__) || defined(__linux__)
#include <ncurses.h>
#else
#include <ncurses/ncurses.h>
#endif /* __FreeBSD__ || __linux__ */
int main(){initscr(); endwin(); return 0;}
EOF
if $CC $CFLAGS $CURSES $LDFLAGS $CFLAGS_END >/dev/null 2>&1 ;then
    echo OK
else
    echo FAIL
    exit 1
fi

# Check for latests versions of gcc
printf "Checking -Wimplicit-fallthrough..."
if $CC $CFLAGS $STYLE -Wimplicit-fallthrough=0 >/dev/null 2>&1 ;then
    echo OK
    CFLAGS="$CFLAGS -Wimplicit-fallthrough=0"
else
    echo FAIL
fi

# Check for lib/trie/Makefile
printf "Checking lib/trie/Makefile..."
if ls lib/trie/Makefile >/dev/null 2>&1 ;then
    echo OK
else
    echo FAIL
    exit 1
fi

# Remove stale files
rm -f bin/style.o bin/ncursesw.c bin/ncursesw

cat >Makefile <<EOF
# Makefile for ITMMORGUE
CC=$CC
SOURCES=$SRC

all: $EXECUTABLE
	@echo "Run 'make run' now to start the game! "

run: run_client
	@echo "Running the game..."

run_client: $EXECUTABLE
	$VARS_CLIENT $EXECUTABLE

clean:
	rm -rf $WORKDIR

$WORKDIR:
	mkdir $WORKDIR

$EXECUTABLE: bin $OBJECTS $LIBS
	\$(CC) $LDFLAGS $CFLAGS $OBJECTS $LIBS -o $EXECUTABLE $CFLAGS_END

EOF

# objects
for C in $SRC ;do
O=`echo "$C " | sed 's/\\.c /.o/g'`
O="$WORKDIR/$O"
cat >>Makefile <<EOF
$O : $SRCDIR/$C $HEADERS
	\$(CC) $CFLAGS -c $SRCDIR/$C -o $O

EOF
done

# libs
for L in $LIBS ;do
cat >>Makefile <<EOF
$L:
	( cd `dirname "$L"` && \$(MAKE) "CC=$CC" "CFLAGS=$CFLAGS" ) 
EOF
done

echo "Successfully configured for $OS. Please run 'make' now."
